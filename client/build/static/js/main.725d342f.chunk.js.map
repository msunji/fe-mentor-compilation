{"version":3,"sources":["styles/globalStyle.js","components/Header.js","components/layout/SkeletonCard.js","components/solution-components/Solution.js","components/solution-components/Solutions.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","reset","Text","styled","section","Header","className","href","StyledSkeleton","div","SkeletonCard","SolutionCard","SolutionThumb","img","SolutionTags","ul","SolutionTitle","SolutionLinks","Solution","data","src","thumbDesktop","url","alt","challenge","built","map","builtwith","i","length","repo","live","SolutionsSection","SolutionsContainer","Solutions","useState","solutions","setSolutions","loadSolutions","a","axios","get","response","console","error","useEffect","solution","id","_","SiteGrid","main","SiteContent","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA+EeA,EA5EKC,YAAH,42CACbC,K,OCFEC,EAAOC,IAAOC,QAAV,y4BAiDGC,EAAS,WACpB,OACE,eAACH,EAAD,WACE,2DACA,kMAKA,sBAAKI,UAAU,YAAf,UACE,mBAAGC,KAAK,uBAAR,uBACA,mBAAGA,KAAK,4BAAR,2B,kDC5DFC,EAAiBL,IAAOM,IAAV,8nDAgFPC,EAAe,WAC1B,OACE,cAACF,EAAD,UACE,sBAAKF,UAAU,uBAAf,UACE,qBAAKA,UAAU,mBACf,qBAAIA,UAAU,gBAAd,UACE,uBACA,0BAEF,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,yBAEjB,qBAAIA,UAAU,sBAAd,UACE,uBACA,gC,QC7FJK,EAAeR,IAAOM,IAAV,kPAcZG,EAAgBT,IAAOU,IAAV,qGAMbC,EAAeX,IAAOY,GAAV,8VAiBZC,EAAgBb,IAAOM,IAAV,kPAcbQ,EAAgBd,IAAOY,GAAV,qYAwBNG,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,cAACR,EAAD,UACE,sBAAKL,UAAU,uBAAf,UACE,cAACM,EAAD,CAAeQ,IAAKD,EAAKE,aAAa,GAAGC,IAAKC,IAAKJ,EAAKK,YAExD,cAACV,EAAD,UACGK,EAAKM,MAAMC,KAAI,SAACC,EAAWC,GAAZ,OACd,qBAAoBtB,UAAU,MAA9B,UACGqB,EACAC,IAAMT,EAAKM,MAAMI,OAAS,EAAI,KAAO,KAF/BF,QAMb,cAACX,EAAD,UACE,oBAAIV,UAAU,iBAAd,SAAgCa,EAAKK,cAGvC,eAACP,EAAD,WACE,6BACE,oBAAGV,KAAMY,EAAKW,KAAd,UACE,+BACE,cAAC,IAAD,MAFJ,YAOF,6BACE,oBAAGvB,KAAMY,EAAKY,KAAd,UACE,+BACE,cAAC,IAAD,MAFJ,qBCpGNC,EAAmB7B,IAAOC,QAAV,gRAehB6B,EAAqB9B,IAAOM,IAAV,ySAcXyB,EAAY,WACvB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAa,uCAAG,4BAAAC,EAAA,+EAEKC,IAAMC,IAAI,kBAFf,OAEZC,EAFY,OAGlBL,EAAaK,EAASvB,KAAKiB,WAHT,gDAKlBO,QAAQC,MAAR,MALkB,yDAAH,qDAanB,OAJAC,qBAAU,WACRP,MACC,IAGD,cAACN,EAAD,UACE,cAACC,EAAD,UACGG,EAAUP,OACPO,EAAUV,KAAI,SAACoB,GAAD,OACZ,cAAC,EAAD,CAA4B3B,KAAM2B,GAAnBA,EAASC,OAE1B,CAAC,EAAG,EAAG,EAAG,GAAGrB,KAAI,SAACsB,EAAGpB,GAAJ,OAAU,cAAC,EAAD,GAAmBA,WCrDpDqB,EAAW9C,IAAO+C,KAAV,uIASRC,EAAchD,IAAOM,IAAV,mOA0BF2C,MAdf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAACH,EAAD,UACE,eAACE,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,aC7BVE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.725d342f.chunk.js","sourcesContent":["import reset from \"styled-reset\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  :root {\n    --header-text: 'Epilogue', sans-serif;\n    --body-text: 'Roboto', sans-serif;\n    --padding-y: 2rem;\n    --padding-x: 2rem;\n    --off-white: #fffffe;\n    --beige: #faeee7;\n    --grey: #594a4e;\n    --desat-brown: #b58f7a;\n    --red: #ef2020;\n    --brick: #d1570f;\n    --dark-brick: #582a18;\n  }\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n  * {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  html,\n  body {\n    overflow-x: hidden;\n    min-height: 100vh;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 1.5;\n    letter-spacing: 0.9px;\n    background: var(--beige);\n    font-family: var(--body-text);\n    color: var(--grey);\n  }\n\n  #root {\n    display: flex;\n    min-height: 100vh;\n    flex-direction: column;\n  }\n\n  h1, h2, h3, h4 {\n    font-family: var(--header-text);\n    color: var(--dark-brick);\n  }\n  \n  main {\n    flex: 1;\n  }\n  \n  p {\n    font-size: 1.00em;\n    line-height: 1.50em;\n    padding-top: 0.389em;\n    font-family: var(--body-text);\n  }\n  a {\n    text-decoration: none;\n    color: var(--brick);\n    transition: color 0.4s ease;\n\n    &:visited {\n      text-decoration: none;\n      color: var(--brick);\n    }\n\n    &:hover,\n    &:active\n     {\n      color: var(--dark-brick);\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from \"styled-components\";\n\nconst Text = styled.section`\n  padding: 4rem 0;\n\n  h1 {\n    font-weight: 700;\n    font-size: clamp(1.46rem, 1.2059rem + 1.1294vw, 1.7rem);\n    line-height: 1.11;\n    margin-bottom: 0.5rem;\n    color: var(--brick);\n  }\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  .links-out {\n    a {\n      display: inline-flex;\n      align-items: center;\n      text-decoration: underline;\n\n      &:hover {\n        text-decoration: none;\n      }\n\n      &:not(:last-of-type) {\n        margin-right: 10px;\n      }\n      &::before {\n        content: \"\";\n        display: block;\n        width: 20px;\n        margin-right: 10px;\n        background: var(--grey);\n        height: 1px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 1000px) {\n    max-width: 300px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    position: fixed;\n    height: 100vh;\n  }\n`;\n\nexport const Header = () => {\n  return (\n    <Text>\n      <h1>Frontend Mentor Solutions</h1>\n      <p>\n        Links are provided for each project's Github repo and live site. This is\n        a work in progress, so expect to see more changes as I progress through\n        more challenges.\n      </p>\n      <div className=\"links-out\">\n        <a href=\"http://mconsunji.com\">Portfolio</a>\n        <a href=\"https://github.com/msunji\">Github</a>\n      </div>\n    </Text>\n  );\n};\n","import styled from \"styled-components\";\n\nconst StyledSkeleton = styled.div`\n  overflow: hidden;\n  background: var(--off-white);\n  color: rgb(247, 245, 248);\n  width: 100%;\n  border-radius: 10px;\n\n  @keyframes pulse {\n    0% {\n      background-color: var(--beige);\n    }\n    50% {\n      background-color: #d7b09a;\n    }\n    100% {\n      background-color: var(--beige);\n    }\n  }\n\n  .skeleton-card__inner {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n  }\n\n  @media screen and (min-width: 640px) and (max-width: 1199px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media screen and (min-width: 1100px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  .skeleton {\n    &-thumb {\n      height: 181px;\n      width: 100%;\n      animation: pulse linear 2s infinite;\n      border-radius: 10px 10px 0 0px;\n    }\n    &-title {\n      padding: 0rem 1rem 0.5rem 1rem;\n      flex-grow: 1;\n\n      &__bg {\n        height: 1.4rem;\n        animation: pulse linear 2s infinite;\n      }\n    }\n    &-view-links {\n      margin: 0.5em 1rem 1rem 1rem;\n      align-self: flex-end;\n      list-style-type: none;\n      height: 1em;\n\n      li {\n        display: inline-flex;\n        margin-left: 10px;\n        animation: pulse linear 2s infinite;\n        height: 1.3em;\n        width: 50px;\n        padding-bottom: 1rem;\n      }\n    }\n    &-tags {\n      display: inline-block;\n      overflow: hidden;\n      padding: 1rem 1rem 0.5rem 1rem;\n\n      li {\n        display: inline-flex;\n        margin-right: 10px;\n        animation: pulse linear 2s infinite;\n        height: 0.7em;\n        width: 90px;\n      }\n    }\n  }\n`;\n\nexport const SkeletonCard = () => {\n  return (\n    <StyledSkeleton>\n      <div className=\"skeleton-card__inner\">\n        <div className=\"skeleton-thumb\"></div>\n        <ul className=\"skeleton-tags\">\n          <li></li>\n          <li></li>\n        </ul>\n        <div className=\"skeleton-title\">\n          <div className=\"skeleton-title__bg\" />\n        </div>\n        <ul className=\"skeleton-view-links\">\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n    </StyledSkeleton>\n  );\n};\n","import styled from \"styled-components\";\nimport { FiGithub, FiExternalLink } from \"react-icons/fi\";\n\nconst SolutionCard = styled.div`\n  overflow: hidden;\n  background: var(--off-white);\n  width: 100%;\n  border-radius: 10px;\n\n  .solution-card__inner {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst SolutionThumb = styled.img`\n  width: 100%;\n  object-fit: cover;\n  border-radius: 10px 0 0 0 10px;\n`;\n\nconst SolutionTags = styled.ul`\n  text-transform: uppercase;\n  font-size: 0.75em;\n  font-weight: 500;\n  display: inline-flex;\n  flex-wrap: wrap;\n  overflow: hidden;\n  font-family: var(--body-text);\n  letter-spacing: 1.2px;\n  padding: 1rem 1rem 0.5rem 1rem;\n  color: var(--desat-brown);\n\n  li:not(:last-of-type) {\n    margin-right: 2px;\n  }\n`;\n\nconst SolutionTitle = styled.div`\n  padding: 0rem 1rem 0.5rem 1rem;\n  flex-grow: 1;\n  margin-bottom: 0.3rem;\n\n  h2 {\n    padding-top: 0;\n    letter-spacing: -0.5px;\n    font-size: 1.25em;\n    line-height: 1.25;\n    font-weight: 600;\n  }\n`;\n\nconst SolutionLinks = styled.ul`\n  padding: 0.5em 1rem 1rem 1rem;\n  font-size: 0.83em;\n  font-weight: 500;\n  text-transform: uppercase;\n  align-self: flex-end;\n  list-style-type: none;\n\n  li {\n    display: inline-flex;\n    align-items: center;\n    margin-left: 10px;\n\n    a {\n      display: flex;\n    }\n\n    svg {\n      margin-right: 6px;\n      font-size: 1.3em;\n    }\n  }\n`;\n\nexport const Solution = ({ data }) => {\n  return (\n    <SolutionCard>\n      <div className=\"solution-card__inner\">\n        <SolutionThumb src={data.thumbDesktop[0].url} alt={data.challenge} />\n\n        <SolutionTags>\n          {data.built.map((builtwith, i) => (\n            <li key={builtwith} className=\"tag\">\n              {builtwith}\n              {i !== data.built.length - 1 ? \", \" : \"\"}\n            </li>\n          ))}\n        </SolutionTags>\n        <SolutionTitle>\n          <h2 className=\"challenge-name\">{data.challenge}</h2>\n        </SolutionTitle>\n\n        <SolutionLinks>\n          <li>\n            <a href={data.repo}>\n              <span>\n                <FiGithub />\n              </span>\n              Code\n            </a>\n          </li>\n          <li>\n            <a href={data.live}>\n              <span>\n                <FiExternalLink />\n              </span>\n              Site\n            </a>\n          </li>\n        </SolutionLinks>\n      </div>\n    </SolutionCard>\n  );\n};\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { SkeletonCard } from \"../layout/SkeletonCard\";\nimport { Solution } from \"./Solution\";\n\nconst SolutionsSection = styled.section`\n  padding: 2rem 0;\n\n  @media screen and (min-width: 1000px) {\n    max-width: 600px;\n    position: absolute;\n    right: 0;\n  }\n  @media screen and (min-width: 1200px) {\n    max-width: 750px;\n    position: absolute;\n    right: 0;\n  }\n`;\n\nconst SolutionsContainer = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 20px;\n\n  @media screen and (min-width: 700px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nexport const Solutions = () => {\n  const [solutions, setSolutions] = useState([]);\n\n  const loadSolutions = async () => {\n    try {\n      const response = await axios.get(\"/api/solutions\");\n      setSolutions(response.data.solutions);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    loadSolutions();\n  }, []);\n\n  return (\n    <SolutionsSection>\n      <SolutionsContainer>\n        {solutions.length\n          ? solutions.map((solution) => (\n              <Solution key={solution.id} data={solution} />\n            ))\n          : [1, 2, 3, 4].map((_, i) => <SkeletonCard key={i} />)}\n      </SolutionsContainer>\n    </SolutionsSection>\n  );\n};\n","import GlobalStyle from \"./styles/globalStyle\";\nimport { Header } from \"./components/Header\";\nimport { Solutions } from \"./components/solution-components/Solutions\";\nimport styled from \"styled-components\";\n\nconst SiteGrid = styled.main`\n  display: grid;\n  grid-template-columns: 1fr min(92%, 1500px) 1fr;\n\n  > * {\n    grid-column: 2;\n  }\n`;\n\nconst SiteContent = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 1000px) {\n    flex-direction: row;\n    justify-content: space-between;\n    position: relative;\n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <SiteGrid>\n        <SiteContent>\n          <Header />\n          <Solutions />\n        </SiteContent>\n      </SiteGrid>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}